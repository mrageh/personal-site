---
title: Basic OOP Concepts In Ruby
date: 2013-12-06 14:53
tags: ruby, oop
---
Ruby is a object oriented programming language, what this means is you use objects to do things for you and you request data from them. From a very high level perspective that is what an object is, and everything in ruby is a object. Therefore you can use almost everything in ruby to either do something for you or give you some information back. Objects are the building blocks of every program, but you might be wondering 'what is an object?'

Well in simple terms a object is something that has 'characteristics' and behavior but developers prefer to call them 'attributes' and 'methods'.

If you briefly think of objects as people then the 'characteristics' aspect of objects will make more sense. A person's eye color, height, weight, length etc is a attribute that each person has, thus every object also has 'characteristics'. A characteristic (attribute) is a property of a object and this can either be asked for (developers say get or read), or changed (developers say set or write).

So what is a 'method'? Well in simple terms it is the 'behavior' of an object. Going back to people again each person can walk, talk, laugh, run etc. This is what the 'behavior' of a object is equivalent to, so a object might be able to print stuff out to a screen, do a calculation etc. 'Well how do I make a object?'

 Now that requires you to make a 'blueprint' of the 'characteristics' and behavior that a object can have. But developers prefer to say you need to make a 'class' that will specify the attributes and methods a object can have. So in essence a 'class' is a bundle that specifies all of the 'characteristics' and 'behavior' a object can have.

If everything in Ruby is a object and every object is defined by a blueprint, then we can safely say that every object is built from the specification of its blueprint. Developers like to say that every 'object' is an 'instance' of some 'class'.

After this brief and simplified description of OOP we start to get a sense of how programs are built in Ruby. The cool thing is once you learn how to program you can create your own objects with their own unique 'characteristics' and behavior. You could build a program that calculates your monthly expenditure or one that talks to some hardware to make it do cool stuff, it all comes down to your imagination. However their is a lot of learning involved and it takes years of continual practice to fully understand all of these concepts.

I hope this basic introduction to object oriented programming was helpful. One thing I really tried to do was make it simple enough for a beginner to conceptualize and understand, so I left out a left of the low level details. I would appreciate any sort of constructive feedback as this is the first tutorial I have ever written.
